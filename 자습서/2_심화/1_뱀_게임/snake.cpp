#include "snake.h"

/*-- 위치 클래스 구현체 --*/

위치 /*클래스*/ 안에 /*생성자인*/ 위치() {};
위치 /*클래스*/ 안에 /*생성자인*/ 위치(정수형인 가로좌표, 정수형인 세로좌표)
	: 가로좌표(가로좌표), 세로좌표(세로좌표) {};

/*결과가*/ 반환되지_않는 위치 /*클래스*/ 안에 /*메서드인*/ 좌표_설정(정수형인 가로좌표, 정수형인 세로좌표)
{
	이것의->가로좌표 = 가로좌표;
	이것의->세로좌표 = 세로좌표;
}
/*결과가*/ 반환되지_않는 위치 /*클래스*/ 안에 /*메서드인*/ 좌표_설정(위치 위치_인자)
{
	이것의->가로좌표 = 위치_인자.가로좌표_얻기();
	이것의->세로좌표 = 위치_인자.세로좌표_얻기();
}
/*결과가*/ 정수형을_반환하는 위치 /*클래스*/ 안에 /*메서드인*/ 가로좌표_얻기()
{
	반환 이것의->가로좌표;
}
/*결과가*/ 정수형을_반환하는 위치 /*클래스*/ 안에 /*메서드인*/ 세로좌표_얻기()
{
	반환 이것의->세로좌표;
}
/*결과가*/ 진실혹은거짓/*을 반환하는*/ 위치 /*클래스*/ 안에 /*오버로딩 된*/ 연산자 ==(상수 위치 참조 위치_인자) 상수
{
	반환 위치_인자.가로좌표 == 이것의->가로좌표 그리고 위치_인자.세로좌표 == 이것의->세로좌표;
}

/*-- 상자 클래스 구현체 --*/

상자 /*클래스*/ 안에 /*생성자인*/ 상자() {}
상자 /*클래스*/ 안에 /*생성자인*/ 상자(위치 위치_인자) : 현재_위치(위치_인자) {}

위치/*를 반환하는*/ 상자 /*클래스*/ 안에 /*메서드인*/ 위치_얻기()
{
	반환 이것의->현재_위치;
}

/*결과가*/ 반환하지_않는 상자 /*클래스*/ 안에 /*메서드인*/ 좌표_설정(위치 위치_인자)
{
	현재_위치.좌표_설정(위치_인자.가로좌표_얻기(), 위치_인자.세로좌표_얻기());
}

/*-- 뱀 클래스 구현체 --*/

뱀::뱀() {}
뱀::뱀(위치 위치_인자) : 상자(위치_인자) {}

/*결과가*/ 반환되지_않는 뱀 /*클래스*/ 안에 /*메서드인*/ 사과_먹음()
{
	이것의->꼬리_갯수 += 1;
}

/*결과가*/ 반환되지_않는 뱀 /*클래스*/ 안에 /*메서드인*/ 꼬리_늘리기()
{
	위치 포인터 임시_꼬리들 = 동적 위치[이것의->꼬리_갯수 - 1];
	반복 (정수형인 임시 = 0; 임시 < 이것의->꼬리_갯수 - 1; 임시++)
	{
		임시_꼬리들[임시] = 꼬리들의_위치[임시];
	}

	이것의->꼬리들의_위치 = 동적 위치[이것의->꼬리_갯수];
	반복(정수형인 임시 = 0; 임시 < 이것의->꼬리_갯수; 임시++)
	{
		꼬리들의_위치[임시] = 임시_꼬리들[임시];
	}

	삭제 임시_꼬리들;
}

/*결과가*/ 반환되지_않는 뱀 /*클래스*/ 안에 /*메서드인*/ 꼬리_삽입(위치 위치_인자)
{
	반복 (정수형인 임시 = 이것의->꼬리_갯수 - 1; 임시 > 0; 임시--)
	{
		꼬리들의_위치[임시] = 꼬리들의_위치[임시-1];
	}
	꼬리들의_위치[0].좌표_설정(위치_인자);
}

/*결과가*/ 반환되지_않는 뱀 /*클래스*/ 안에 /*메서드인*/ 이동()
{
	이것의->이동(마지막_이동_위치);
}

/*결과가*/ 반환되지_않는 뱀 /*클래스*/ 안에 /*메서드인*/ 이동(정수인 방향_인자)
{
	만약에 (꼬리_갯수 > 0)
	{
		이것의->꼬리_삽입(이것의->현재_위치);
	}

	분기(방향_인자)
	{
	경우 왼쪽:
		이것의->현재_위치.좌표_설정(
			이것의->현재_위치.가로좌표_얻기() + 0,
			이것의->현재_위치.세로좌표_얻기() - 1
		);
		멈춤;
	경우 위쪽:
		이것의->현재_위치.좌표_설정(
			이것의->현재_위치.가로좌표_얻기() - 1,
			이것의->현재_위치.세로좌표_얻기() + 0
		);
		멈춤;
	경우 오른쪽:
		이것의->현재_위치.좌표_설정(
			이것의->현재_위치.가로좌표_얻기() + 0,
			이것의->현재_위치.세로좌표_얻기() + 1
		);
		멈춤;
	경우 아래쪽:
		이것의->현재_위치.좌표_설정(
			이것의->현재_위치.가로좌표_얻기() + 1,
			이것의->현재_위치.세로좌표_얻기() + 0
		);
		멈춤;
	기본:
		멈춤;
	}
	마지막_이동_위치 = 방향_인자;
}

/*결과가*/ 위치/*를 반환하는*/ 뱀 /*클래스*/ 안에 /*메서드인*/ 선택된_꼬리_위치_얻기(정수형인 선택된_꼬리)
{
	반환 *(꼬리들의_위치 + 선택된_꼬리);
}

/*결과가*/ 정수를_반환하는 뱀 /*클래스*/ 안에 /*메서드인*/ 마지막_이동_위치_얻기()
{
	반환 마지막_이동_위치;
}

/*결과가*/ 정수를_반환하는 뱀 /*클래스*/ 안에 /*메서드인*/ 꼬리_갯수_얻기()
{
	반환 꼬리_갯수;
}