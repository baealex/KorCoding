#include "snake_game.h"

뱀게임 /*클래스*/ 안에 /*생성자인*/ 뱀게임()
{
	뱀_객체 = 새로운 뱀(
		위치(맵의_가로_크기 / 2, 맵의_세로_크기 / 2)
	);
	사과_객체 = 새로운 상자(
		위치(수학.랜덤값(0, 맵의_가로_크기), 수학.랜덤값(0, 맵의_세로_크기))
	);
	게임이_끝난다 = 거짓;
}

/*결과가*/ 반환되지_않는 뱀게임 /*클래스*/ 안에 /*메서드인*/ 키_감지()
{
	만약에 (_kbhit())
	{
		구분 (_getch())
		{
		경우 'a':
		경우 'A':
			만약에 (뱀_객체 에서 마지막_이동_위치_얻기() != 오른쪽)
				뱀_객체->이동(왼쪽);
			멈춤;
		경우 'w':
		경우 'W':
			만약에(뱀_객체 에서 마지막_이동_위치_얻기() != 아래쪽)
				뱀_객체->이동(위쪽);
			멈춤;
		경우 'd':
		경우 'D':
			만약에(뱀_객체 에서 마지막_이동_위치_얻기() != 왼쪽)
				뱀_객체->이동(오른쪽);
			멈춤;
		경우 's':
		경우 'S':
			만약에(뱀_객체 에서 마지막_이동_위치_얻기() != 위쪽)
				뱀_객체->이동(아래쪽);
			멈춤;
		기본:
			멈춤;
		}
	}
	아니면
	{
		뱀_객체->이동(); // 마지막 움직였던 방향으로
	}
}

/*결과가*/ 반환되지_않는 뱀게임 /*클래스*/ 안에 /*메서드인*/ 최신화()
{
	만약에 (이것의->뱀_객체 에서 위치_얻기().가로좌표_얻기() < 0 또는
		    이것의->뱀_객체 에서 위치_얻기().가로좌표_얻기() > 맵의_가로_크기 또는
	     	이것의->뱀_객체 에서 위치_얻기().세로좌표_얻기() < 0 또는
		    이것의->뱀_객체 에서 위치_얻기().세로좌표_얻기() > 맵의_세로_크기
	) {
		게임이_끝난다 = 참;
	}

	반복 (정수형인 임시_인자 = 0; 임시_인자 < 뱀_객체 에서 꼬리_갯수_얻기(); 임시_인자++)
	{
		만약에 (뱀_객체 에서 위치_얻기() == 뱀_객체 에서 선택된_꼬리_위치_얻기(임시_인자))
		{
			게임이_끝난다 = 참;
			멈춤;
		}
	}

	만약에 (뱀_객체 에서 위치_얻기() == 사과_객체 에서 위치_얻기())
	{
		뱀_객체 에서 사과_먹음();
		뱀_객체 에서 꼬리_늘리기();

		사과_객체 에서 좌표_설정(
			위치(수학.랜덤값(0, 맵의_가로_크기), 수학.랜덤값(0, 맵의_세로_크기))
		);
	}
}

/*결과가*/ 반환되지_않는 뱀게임 /*클래스*/ 안에 /*메서드인*/ 시작()
{
	동안 (!게임이_끝난다)
	{
		키_감지();
		최신화();
		그리기();
		_sleep(DELAY);
	}
}

/*결과가*/ 반환되지_않는 뱀게임 /*클래스*/ 안에 /*메서드인*/ 그리기()
{
	콘솔.정리();
	반복 (정수형인 가로좌표 = -1; 가로좌표 < 맵의_가로_크기 + 2; 가로좌표++)
	{
		반복 (정수형인 세로좌표 = -1; 세로좌표 < 맵의_세로_크기 + 2; 세로좌표++)
		{
			/* 맵 아웃라인 그리기 */
			만약에 (가로좌표 == -1) { 입출력.출력("◎"); 이어서; }
			만약에 (세로좌표 == -1) { 입출력.출력("◎"); 이어서; }
			만약에 (가로좌표 == 맵의_가로_크기 + 1) { 입출력.출력("◎"); 이어서; }
			만약에 (세로좌표 == 맵의_세로_크기 + 1) { 입출력.출력("◎"); 이어서; }
			/* 맵 아웃라인 그리기 끝 */

			진실혹은거짓 뱀이다 = 거짓;

			만약에 (위치(가로좌표, 세로좌표) == 이것의->뱀_객체->위치_얻기())
			{
				뱀이다 = 진실;
			}
			아니면
			{
				반복 (정수형인 임시_인자 = 0; 임시_인자 < 뱀_객체->꼬리_갯수_얻기(); 임시_인자++)
				{
					만약에 (위치(가로좌표, 세로좌표) == 뱀_객체->선택된_꼬리_위치_얻기(임시_인자))
					{
						뱀이다 = 참;
						멈춤;
					}
				}
			}

			만약에 (뱀이다)
			{
				입출력.출력("■");
			}
			혹은 (위치(가로좌표, 세로좌표) == 사과_객체->위치_얻기())
			{
				입출력.출력("□");
			}
			아니면
			{
				입출력.출력("　");
			}
		}
		입출력.개행();
	}
}